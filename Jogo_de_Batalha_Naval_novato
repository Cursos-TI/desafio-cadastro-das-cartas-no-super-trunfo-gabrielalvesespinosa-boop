#include <stdio.h>

#define TAMANHO 10   // tamanho fixo do tabuleiro
#define NAVIO 3      // valor que representa o navio
#define AGUA 0       // valor que representa a água
#define TAM_NAVIO 3  // tamanho fixo do navio (3 casas)

// Função para exibir o tabuleiro completo
void exibirTabuleiro(int tabuleiro[TAMANHO][TAMANHO]) {
    printf("\n===== TABULEIRO BATALHA NAVAL =====\n\n");
    for (int i = 0; i < TAMANHO; i++) {
        for (int j = 0; j < TAMANHO; j++) {
            printf("%d ", tabuleiro[i][j]); // imprime cada célula
        }
        printf("\n"); // quebra de linha no fim de cada linha
    }
    printf("\n");
}

int main() {
    // 1. Criar tabuleiro e inicializar com água (0)
    int tabuleiro[TAMANHO][TAMANHO];
    for (int i = 0; i < TAMANHO; i++) {
        for (int j = 0; j < TAMANHO; j++) {
            tabuleiro[i][j] = AGUA;
        }
    }

    // 2. Criar navios (vetores)
    int navioHorizontal[TAM_NAVIO] = {NAVIO, NAVIO, NAVIO};
    int navioVertical[TAM_NAVIO]   = {NAVIO, NAVIO, NAVIO};

    // 3. Definir coordenadas iniciais dos navios (linha e coluna)
    int linhaH = 2, colunaH = 4;  // início navio horizontal
    int linhaV = 5, colunaV = 7;  // início navio vertical

    // 4. Validar se cabem no tabuleiro
    if (colunaH + TAM_NAVIO <= TAMANHO && linhaH < TAMANHO) {
        // posiciona o navio horizontal
        for (int i = 0; i < TAM_NAVIO; i++) {
            tabuleiro[linhaH][colunaH + i] = navioHorizontal[i];
        }
    }

    if (linhaV + TAM_NAVIO <= TAMANHO && colunaV < TAMANHO) {
        // posiciona o navio vertical
        for (int i = 0; i < TAM_NAVIO; i++) {
            // impede sobreposição: só coloca se a posição for água
            if (tabuleiro[linhaV + i][colunaV] == AGUA) {
                tabuleiro[linhaV + i][colunaV] = navioVertical[i];
            }
        }
    }

    // 5. Exibir tabuleiro
    exibirTabuleiro(tabuleiro);

    return 0;
}
